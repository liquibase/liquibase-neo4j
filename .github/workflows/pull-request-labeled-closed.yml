name: Prepare Release Candidate for Release

on:
  pull_request:
    types:
      - closed

jobs:
  build:
    name: Build Artifact
    runs-on: ubuntu-latest
    if: ${{ github.base_ref == 'main' && github.event.pull_request.merged && contains( github.event.pull_request.labels.*.name, 'Extension Release Candidate :rocket:' ) }}
    steps:
      - uses: actions/checkout@v2
      - name: Cache Local Maven Repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build With Maven
        run: mvn -B clean package -Dmaven.test.skip

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: liquibase-neo4j
          path: target/*.jar

  draft-release:
    needs: [ build ]
    name: Draft Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache Local Maven Repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Set Version Tag ENV from POM
        run: ./.github/set-version-from-pom.sh

      - run: echo ::set-output name=version::$VERSION_TAG
        id: version

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: liquibase-neo4j

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          target_commitish: ${{ github.sha }}
          name: v${{ steps.version.outputs.version }}
          tag_name: liquibase-neo4j-${{ steps.version.outputs.version }}
          draft: true
          body: Support for Liquibase ${{ steps.version.outputs.version }}.
          files: liquibase-neo4j-*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  bump-pom-to-snapshot:
    name: Prepare POM for Development
    runs-on: ubuntu-latest
    needs: [ draft-release ]
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo

      - name: Cache Local Maven Repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Configure git user
        run: |
          git config user.name "liquibot"
          git config user.email "liquibot@liquibase.org"

      - name: Bump POM Version for Development
        run: |
          mvn -B versions:set -DnextSnapshot=true
          git add pom.xml
          git commit -m "Version Bumped to Snapshot for Development"
          git push "https://liquibot:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY.git" HEAD:${{ github.base_ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
